name: Nightly update 3Key Harbor image

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

jobs:
  push_to_registry:
    name: Nightly update and push docker images
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: latest
        run: |
          git fetch --tags
          TAG=$(git describe --tags "$(git rev-list --tags --max-count=1)")
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.latest.outputs.tag }}

      - name: Compute major/minor tags
        id: semver
        run: |
          FULL=${{ steps.latest.outputs.tag }}
          MAJOR=${FULL%%.*}
          MINOR=${FULL%.*}
          echo "tags=${FULL},${MINOR},${MAJOR}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to 3Key Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.3key.company
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            harbor.3key.company/czertainly-signing/czertainly-csc-api
          tags: |
            type=schedule,pattern=nightly
            type=raw,value=latest
            type=raw,value=${{ steps.version.outputs.minor }}
            type=raw,value=${{ steps.version.outputs.major }}
            type=schedule,pattern={{date 'YYYYMMDD'}},priority=900
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: ./Dockerfile
          pull: true
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
