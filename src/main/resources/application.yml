# CSC API configuration
csc:
    # The name of the CSC component that will be provided by the Info endpoint
    name: CSC API
    # The URI of the image file containing the logo of the remote service which SHALL be published online.
    # The image SHALL be in either JPEG or PNG format and not larger than 256x256 pixels.
    logo: https://csc.example/logo.png
    # The ISO 3166-1 [22] Alpha-2 code of the Country where the remote  service provider is established
    # (e.g. ES for Spain).
    region: CZ
    # SignServer workers configuration file
    workerConfigurationFile: /opt/cscapi/workers-dev.yml
    # Number of preloaded keys that are stored in memory for faster access
    numberOfPreloadedKeys: 10

# IDP configuration
idp:
    # Base URL of the IDP OpenID Connect endpoint
    baseUrl: https://idp.example.com/realms/CSC
    # URL of the JWKS endpoint to retrieve and update the public keys
    jwksUri: https://idp.example.com/realms/CSC/protocol/openid-connect/certs
    # URL of the UserInfo endpoint to retrieve user information in exchange for an access token
    userInfoUrl: https://idp.example.com/realms/CSC/protocol/openid-connect/userinfo
    # Issuer of the IDP token, used for token validation
    issuer: https://idp.example.com/realms/CSC
    # Audience of the IDP token, used for token validation
    audience: cscapi
    # Clock skew in seconds for token validation
    clockSkewSeconds: 5

# Signing provider configuration
signingProvider:
    # SignServer configuration
    signserver:
        # URL of the SignServer
        url: https://signserver.example.com/signserver
        client:
            # Authorization type for the client signing operations
            # BASIC is used for basic authentication, and basic username and password are required
            # CERTIFICATE is used for mutual TLS authentication and requires a client certificate
            authType: CERTIFICATE
            # Only used when authorization type is CERTIFICATE
            certificate:
                keystore:
                    # Path to the PKCS#12 keystore file, containing the client certificate and private key,
                    # password should be the same as the password for the private key
                    path: /opt/cscapi/signserver/client-keystore.p12
                    # Client keystore password
                    password: password
            # Only used when authorization type is BASIC
            basic:
                # Username for basic authentication
                username: admin
                # Password for basic authentication
                password: admin
        # Client keystore configuration for admin operations
        admin:
            keystore:
                # Path to the PKCS#12 keystore file, containing the admin certificate and private key,
                # password should be the same as the password for the private key
                path: /opt/cscapi/signserver/admin-keystore.p12
                # Admin keystore password
                password: password

# CA provider configuration
caProvider:
    # EJBCA configuration
    ejbca:
        # URL of the EJBCA
        url: https://ejbca.example.com/ejbca
        # Admin keystore configuration for RA operations
        admin:
            keystore:
                # Path to the PKCS#12 keystore file, containing the admin certificate and private key,
                # password should be the same as the password for the private key
                path: /opt/cscapi/ejbca/admin-keystore.p12
                # Admin keystore password
                password: password
        # End entity configuration
        endEntity:
            # Username pattern to create username
            # Variables can be used in the pattern, e.g. $[name] will be replaced with the claim value of the name
            usernamePattern: $[name]
            # DN pattern to create subject DN of requested certificate
            dnPattern: CN=$[name], UID=$[id]
            # SAN pattern to create subject alternative name of requested certificate
            sanPattern: None
            # CA name to issue the certificate
            caName: DemoClientSubCA_2307RSA
            # End entity profile name to use for the certificate
            endEntityProfileName: DemoDocumentSigningEndEntityProfile
            # Certificate profile name to use for the certificate
            certificateProfileName: DemoDocumentSigningEECertificateProfile

# TLS/mTLS configuration
server:
    ssl:
        enabled: true
        # Configuration of the keystore with server certificate and private key
        key-store-type: PKCS12
        key-store: /opt/cscapi/keystore.p12
        key-store-password: password
        key-alias: server
        key-password: keysecret
        # Configuration of the truststore with trusted client certificates/CA certificates
        client-auth: NEED # NEED = mandatory mTLS, WANT = optional mTLS, NONE = no mTLS
        trust-store-type: PKCS12
        trust-store: /opt/cscapi/truststore.p12
        trust-store-password: password

# Spring configuration
spring:
    jackson:
        default-property-inclusion: NON_NULL

# Logging configuration
logging:
    level:
        com.czertainly.csc: INFO

springdoc:
    swagger-ui:
        disable-swagger-default-url: true
        configUrl: /openapi/swagger-config
        url: /openapi
    api-docs:
        path: /openapi
